rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Bills collection rules
    match /bills/{billId} {
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      allow update: if isAuthenticated() && 
        request.auth.uid == resource.data.userId &&
        request.resource.data.userId == resource.data.userId;
      allow delete: if false;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && 
        request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    // Menu items collection rules
    match /menuItems/{itemId} {
      allow read: if true;  // Anyone can view menu items
      allow write: if false;  // Only admin can modify (use Firebase Admin SDK)
    }

    // Orders collection rules
    match /orders/{orderId} {
      allow read: if request.auth != null && 
                   request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 